{{define "main"}}
<style>
 .hidden {
     visibility: hidden;
 }

 /* https://mikejolley.com/2019/08/02/building-a-cross-browser-compatible-multi-handle-range-slider/ */
 .rotation {
     background: transparent;
     -webkit-appearance: none;
     -moz-appearance: none;
     appearance: none;
 }

 .slider {
     margin: 0px;
     padding: 0;
     border: 0;
     outline: none;
     background: transparent;
     -webkit-appearance: none;
     -moz-appearance: none;
     appearance: none;
     width: 100%;
     height: 0;
     pointer-events: none; /* Prevent mouse interaction on the range slider. */
 }
 .slider::-webkit-slider-runnable-track {
     cursor: default;
     height: 1px; /* Required for Samsung internet based browsers */
     outline: 0;
     -webkit-appearance: none;
 }
 .slider::-moz-range-track {
     cursor: default;
     height: 1px;
     outline: 0;
     -moz-appearance: none;
 }

 .slider::-webkit-slider-thumb {
     -webkit-appearance: none; /* Reset appearance so we can apply backgrounds/borders etc. */
     pointer-events: auto; /* Re-enable pointer events so the handles can be used. */
     width: 32px;
     height: 32px;
     margin-top: -15px;
     border-radius: 100%; 
     background: radial-gradient(rgba(255,255,255,0) 32%,#000000 46%,#ffffff 54%,#000000 60%);
 }

 .slider::-moz-range-thumb {
     -moz-appearance: none; /* Reset appearance so we can apply backgrounds/borders etc. */
     pointer-events: auto; /* Re-enable pointer events so the handles can be used. */
     width: 32px;
     height: 32px;
     /* margin-top: -50px; */
     border-radius: 100%; 
     background: radial-gradient(rgba(255,255,255,0) 32%,#000000 46%,#ffffff 54%,#000000 60%);
 }

 .slider {
     margin-top: 16px;
 }

 /* .slider::-webkit-slider-thumb:hover {
    background: radial-gradient(rgba(255,255,255,0) 32%,#000000 46%,#ffffff 54%,#000000 60%);
    }
  */
 .track {
     width: 100%;
     height: 32px;
 }

 .preview {
     width: 100%;
     height: 480px;
     border: 1px solid black;
 }

 .picker {
     background: #ddd;
     padding: 1em;
 }
</style>

{{template "picker" .}}

{{end}}

{{define "picker"}}
<form class="xpicker" hx-post="/tools/picker" hx-swap="innerHTML">
  <div class="nes-container is-dark">
    <button style="display: none" id="submit"></button>

    <div style="display:flex; justify-content:space-between; gap: 1em;align-items:center">
      <div style="width:100%; margin-bottom: 1em">
        <div class="nes-select is-dark" >
          <select name="gradientType"
                  id="gradient-type"
                  _="on change log 'changed' then click() the #submit">
            <option {{if (eq .Gradient.Type "linear")}}selected{{end}}
                    value="linear">Linear Gradient</option>
            <option {{if (eq .Gradient.Type "radial")}}selected{{end}}
                    value="radial">Radial Gradient</option>
            <option {{if (eq .Gradient.Type "conic")}}selected{{end}}
                    value="conic">Conic Gradient</option>
          </select>
        </div>
      </div>
      <label style="white-space: nowrap">
        <input class="nes-checkbox is-dark"
               id="repeatingCheckbox"
               type="checkbox"
               name="repeat"
               _="on change log 'changed' then click() the #submit"
               {{if .Gradient.Repeat}}checked{{end}}>
        <span>Repeating</span>
      </label>
    </div>

    <div style="display:flex;justify-items:stretch">
      {{range $i, $stop := .Gradient.Stops}}
      <input name="color"
             type="color"
             value="{{$stop.Color}}"
             style="width: 100%"
             _="on change log 'changed' then click() the #submit">
      {{end}}
    </div>

    <div style="position:relative">

      {{range $stop := .Gradient.Stops}}
      <div class="group">
        <input name="percent"
               style="position:absolute"
               type="range"
               min="0"
               max="100"
               value="{{$stop.Percent}}"
               class="slider"
               _="on click remove .selected from .selected add .selected to the closest .group

                     on change log 'changed' then click() the #submit">
      </div>
      {{end}}

      <div class="track" style="background: {{.Gradient.RenderBar}}"></div>
    </div>

    <div style="display:flex">
      <input class="rotation {{if (eq .Gradient.Type "radial")}}hidden{{end}}"
             style="flex:1"
             {{if (eq .Gradient.Type "radial")}}hidden{{end}}
             name="degrees"
             type="range"
             min="0"
             max="180"
             value="{{.Gradient.Degrees}}"
             _="on change click() the #submit">
    </div>

    <div class="preview" style="background: {{.Gradient.Render}}"></div>

    <div class="f-row justify-content:space-between">
      <button class="nes-btn"
              hx-post="/tools/set-background"
              hx-target="#user-style"
              hx-swap="innerHTML">set as background</button>
    </div>
  </div>
</form>
{{end}}

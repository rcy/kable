// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: attempts.sql

package api

import (
	"context"
)

const createAttempt = `-- name: CreateAttempt :one
insert into attempts(quiz_id, user_id) values($1,$2) returning id, created_at, quiz_id, user_id
`

type CreateAttemptParams struct {
	QuizID int64
	UserID int64
}

func (q *Queries) CreateAttempt(ctx context.Context, arg CreateAttemptParams) (Attempt, error) {
	row := q.db.QueryRow(ctx, createAttempt, arg.QuizID, arg.UserID)
	var i Attempt
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.QuizID,
		&i.UserID,
	)
	return i, err
}

const getAttemptByID = `-- name: GetAttemptByID :one
select id, created_at, quiz_id, user_id from attempts where id = $1
`

func (q *Queries) GetAttemptByID(ctx context.Context, id int64) (Attempt, error) {
	row := q.db.QueryRow(ctx, getAttemptByID, id)
	var i Attempt
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.QuizID,
		&i.UserID,
	)
	return i, err
}
